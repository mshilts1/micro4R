[{"path":"https://mshilts1.github.io/micro4R/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 micro4R authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mshilts1.github.io/micro4R/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Meghan Shilts. Author, maintainer.","code":""},{"path":"https://mshilts1.github.io/micro4R/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shilts M (2025). micro4R: Microbiome Analysis Tools R. R package version 0.0.0.9000, https://mshilts1.github.io/micro4R/.","code":"@Manual{,   title = {micro4R: Microbiome Analysis Tools for R},   author = {Meghan Shilts},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://mshilts1.github.io/micro4R/}, }"},{"path":"https://mshilts1.github.io/micro4R/index.html","id":"micro4r","dir":"","previous_headings":"","what":"Microbiome Analysis Tools for R","title":"Microbiome Analysis Tools for R","text":"Microbiome data analysis tools R goal micro4R create R package microbiome data processing low barrier entry. started career microbiome research bench ELI5 process analyze “big data”. ’ve spent ton time poring experimenting others’ code, want pass . Likely, ideal person benefit micro4R bench scientist without much formal statistics bioinformatics training. Fair warning, already strong stats/informatics background, may much use ! package create brand new functionality essentially inspired /wrapper existing tools others already created. Much can accomplished packages, phyloseq, QIIME 2, MicrobiomeAnalyst. One may better purposes, ’d encourage anyone new field explore multiple tools!","code":""},{"path":"https://mshilts1.github.io/micro4R/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Microbiome Analysis Tools for R","text":"really need R, ’d recommend also downloading working RStudio. ’re true newbie R, ’s tons free content help learn basics. ’re set R/RStudio, can install development version micro4R like :","code":"# install.packages(\"pak\") pak::pak(\"mshilts1/micro4R\")"},{"path":"https://mshilts1.github.io/micro4R/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Microbiome Analysis Tools for R","text":"’ll run small simple possible use case . detailed help documentation, please explore vignettes (TBA). Included package extremely unnaturally tiny toy example demonstrate major functionality, using subsampled publicly available nasal swab 16S microbiome data generated along many colleagues.","code":""},{"path":"https://mshilts1.github.io/micro4R/index.html","id":"making-the-asv-count-and-taxonomy-tables","dir":"","previous_headings":"Example","what":"Making the ASV count and taxonomy tables","title":"Microbiome Analysis Tools for R","text":"don’t know ASV (Amplicon Sequence Variant) , please go first. first thing ’ll files run dada2_asvtable(), essentially wrapper generate ASV count table following workflow similar dada2 tutorial. function can take number arguments, important one ‘’, path folder FASTQ files located. demonstration purposes, ’s set relative path example FASTQ files included package: ’re running data, set ‘’ path folder FASTQ files stored. leave empty (e.g., run dada2_asvtable()), default searching current working directory. (‘chatty’ set FALSE tons information gets printed console otherwise; ’d recommend setting TRUE (default) ’re processing data real, information useful, just much .) Let’s take quick look asvtable looks like (using tibble::as_tibble() function prints nicely): basically just count table number ASVs detected sample. Let’s look column names (AKA names ASVs) look like: ASVs default just named literal DNA sequences. Since ’re (probably?) computer, string hundreds nucletotides likely something can make much sense . next step take nucleotide sequences compare database (two) sequences known taxonomy: two databases ’re using taxonomic assignment : 1. ‘train’ needs path whatever database ’d like use “training set reference sequences known taxonomy”. 2. ‘species’ OPTIONAL. ’d like use option, provide path specifically formatted species assignment database. (Read .) CAUTION: two databases used example comically small artificial subsamples real SILVA databases, ever used testing demonstration purposes! ’ll definitely need download use real databases actual data! many options taxonomic databases can use; major players SILVA, RDP, GreenGenes, UNITE. Please go details links. usually prefer SILVA databases, don’t ! Let’s take look taxonomy assignment table: ’s bit squished, can see information human-friendly . ASV given taxonomic assignment lowest taxonomic level taxonomy assigner confident .","code":"library(micro4R) #> This is version 0.0.0.9000 of micro4R. CAUTION: This is package is under active development and its functions may change at any time, without warning! Please visit https://github.com/mshilts1/micro4R to see recent changes.  asvtable <- dada2_asvtable(where = \"inst/extdata/f\", chatty = FALSE, logfile = FALSE) #> Creating output directory: /var/folders/pp/15rq6p297j18gk2xt39kdmm40000gp/T//RtmpwpwU65/dada2_out/filtered #> 59520 total bases in 248 reads from 7 samples will be used for learning the error rates. #> 49600 total bases in 248 reads from 7 samples will be used for learning the error rates. tibble::as_tibble(asvtable, rownames = \"SampleID\") #> # A tibble: 7 × 7 #>   SampleID  TACGTAGGTGGCAAGCGTTA…¹ TACGGAGGGTGCAAGCGTTA…² TACGTAGGGTGCGAGCGTTG…³ #>   <chr>                      <int>                  <int>                  <int> #> 1 SAMPLED_…                      0                      0                      0 #> 2 SAMPLED_…                      0                      0                      0 #> 3 SAMPLED_…                     44                      0                      0 #> 4 SAMPLED_…                     24                      0                      0 #> 5 SAMPLED_…                      0                      0                     12 #> 6 SAMPLED_…                      0                     35                      6 #> 7 SAMPLED_…                      0                      0                      0 #> # ℹ abbreviated names: #> #   ¹​TACGTAGGTGGCAAGCGTTATCCGGAATTATTGGGCGTAAAGCGCGCGTAGGCGGTTTTTTAAGTCTGATGTGAAAGCCCACGGCTCAACCGTGGAGGGTCATTGGAAACTGGAAAACTTGAGTGCAGAAGAGGAAAGTGGAATTCCATGTGTAGCGGTGAAATGCGCAGAGATATGGAGGAACACCAGTGGCGAAGGCGACTTTCTGGTCTGTAACTGACGCTGATGTGCGAAAGCGTGGGGATCAAACAGG, #> #   ²​TACGGAGGGTGCAAGCGTTAATCGGAATTACTGGGCGTAAAGCGCACGCAGGCGGTCTGTCAAGTCGGATGTGAAATCCCCGGGCTCAACCTGGGAACTGCATTCGAAACTGGCAGGCTAGAGTCTTGTAGAGGGGGGTAGAATTCCAGGTGTAGCGGTGAAATGCGTAGAGATCTGGAGGAATACCGGTGGCGAAGGCGGCCCCCTGGACAAAGACTGACGCTCAGGTGCGAAAGCGTGGGGAGCAAACAGG, #> #   ³​TACGTAGGGTGCGAGCGTTGTCCGGAATTACTGGGCGTAAAGGGCTCGTAGGTGGTTTGTCGCGTCGTCTGTGAAATTCTGGGGCTTAACTCCGGGCGTGCAGGCGATACGGGCATAACTTGAGTGCTGTAGGGGTAACTGGAATTCCTGGTGTAGCGGTGAAATGCGCAGATATCAGGAGGAACACCGATGGCGAAGGCAGGTTACTGGGCAGTTACTGACGCTGAGGAGCGAAAGCATGGGTAGCGAACAGG #> # ℹ 3 more variables: #> #   TACGTAGGGTGCAAGCGTTGTCCGGAATTACTGGGCGTAAAGAGCTCGTAGGTGGTTTGTCACGTCGTCTGTGAAATTCCACAGCTTAACTGTGGGCGTGCAGGCGATACGGGCTGACTTGAGTACTGTAGGGGTAACTGGAATTCCTGGTGTAGCGGTGAAATGCGCAGATATCAGGAGGAACACCGATGGCGAAGGCAGGTTACTGGGCAGTTACTGACGCTGAGGAGCGAAAGCATGGGTAGCAAACAGG <int>, #> #   TACGTAGGTGACAAGCGTTGTCCGGATTTATTGGGCGTAAAGGGAGCGCAGGCGGTCTGTTTAGTCTAATGTGAAAGCCCACGGCTTAACCGTGGAACGGCATTGGAAACTGACAGACTTGAATGTAGAAGAGGAAAATGGAATTCCAAGTGTAGCGGTGGAATGCGTAGATATTTGGAGGAACACCAGTGGCGAAGGCGATTTTCTGGTCTAACATTGACGCTGAGGCTCGAAAGCGTGGGGAGCGAACAGG <int>, … colnames(asvtable) #> [1] \"TACGTAGGTGGCAAGCGTTATCCGGAATTATTGGGCGTAAAGCGCGCGTAGGCGGTTTTTTAAGTCTGATGTGAAAGCCCACGGCTCAACCGTGGAGGGTCATTGGAAACTGGAAAACTTGAGTGCAGAAGAGGAAAGTGGAATTCCATGTGTAGCGGTGAAATGCGCAGAGATATGGAGGAACACCAGTGGCGAAGGCGACTTTCTGGTCTGTAACTGACGCTGATGTGCGAAAGCGTGGGGATCAAACAGG\"  #> [2] \"TACGGAGGGTGCAAGCGTTAATCGGAATTACTGGGCGTAAAGCGCACGCAGGCGGTCTGTCAAGTCGGATGTGAAATCCCCGGGCTCAACCTGGGAACTGCATTCGAAACTGGCAGGCTAGAGTCTTGTAGAGGGGGGTAGAATTCCAGGTGTAGCGGTGAAATGCGTAGAGATCTGGAGGAATACCGGTGGCGAAGGCGGCCCCCTGGACAAAGACTGACGCTCAGGTGCGAAAGCGTGGGGAGCAAACAGG\"  #> [3] \"TACGTAGGGTGCGAGCGTTGTCCGGAATTACTGGGCGTAAAGGGCTCGTAGGTGGTTTGTCGCGTCGTCTGTGAAATTCTGGGGCTTAACTCCGGGCGTGCAGGCGATACGGGCATAACTTGAGTGCTGTAGGGGTAACTGGAATTCCTGGTGTAGCGGTGAAATGCGCAGATATCAGGAGGAACACCGATGGCGAAGGCAGGTTACTGGGCAGTTACTGACGCTGAGGAGCGAAAGCATGGGTAGCGAACAGG\" #> [4] \"TACGTAGGGTGCAAGCGTTGTCCGGAATTACTGGGCGTAAAGAGCTCGTAGGTGGTTTGTCACGTCGTCTGTGAAATTCCACAGCTTAACTGTGGGCGTGCAGGCGATACGGGCTGACTTGAGTACTGTAGGGGTAACTGGAATTCCTGGTGTAGCGGTGAAATGCGCAGATATCAGGAGGAACACCGATGGCGAAGGCAGGTTACTGGGCAGTTACTGACGCTGAGGAGCGAAAGCATGGGTAGCAAACAGG\"  #> [5] \"TACGTAGGTGACAAGCGTTGTCCGGATTTATTGGGCGTAAAGGGAGCGCAGGCGGTCTGTTTAGTCTAATGTGAAAGCCCACGGCTTAACCGTGGAACGGCATTGGAAACTGACAGACTTGAATGTAGAAGAGGAAAATGGAATTCCAAGTGTAGCGGTGGAATGCGTAGATATTTGGAGGAACACCAGTGGCGAAGGCGATTTTCTGGTCTAACATTGACGCTGAGGCTCGAAAGCGTGGGGAGCGAACAGG\"  #> [6] \"TACGTAGGTCCCGAGCGTTGTCCGGATTTATTGGGCGTAAAGCGAGCGCAGGCGGTTAGATAAGTCTGAAGTTAAAGGCTGTGGCTTAACCATAGTACGCTTTGGAAACTGTTTAACTTGAGTGCAAGAGGGGAGAGTGGAATTCCATGTGTAGCGGTGAAATGCGTAGATATATGGAGGAACACCGGTGGCGAAAGCGGCTCTCTGGCTTGTAACTGACGCTGAGGCTCGAAAGCGTGGGGAGCAAACAGG\" train <- \"inst/extdata/db/EXAMPLE_silva_nr99_v138.2_toGenus_trainset.fa.gz\" # set training database species <- \"inst/extdata/db/EXAMPLE_silva_v138.2_assignSpecies.fa.gz\" # set species database  taxa <- dada2_taxa(asvtable = asvtable, train = train, species = species, chatty = FALSE) #> # A tibble: 6 × 7 #>   ASV                                    Kingdom Phylum Class Order Family Genus #>   <chr>                                  <chr>   <chr>  <chr> <chr> <chr>  <chr> #> 1 TACGTAGGTGGCAAGCGTTATCCGGAATTATTGGGCG… Bacter… Bacil… Baci… Stap… Staph… Stap… #> 2 TACGGAGGGTGCAAGCGTTAATCGGAATTACTGGGCG… Bacter… Pseud… Gamm… Ente… Enter… Kleb… #> 3 TACGTAGGGTGCGAGCGTTGTCCGGAATTACTGGGCG… Bacter… Actin… Acti… Myco… Coryn… Cory… #> 4 TACGTAGGGTGCAAGCGTTGTCCGGAATTACTGGGCG… Bacter… Actin… Acti… Myco… Coryn… Cory… #> 5 TACGTAGGTGACAAGCGTTGTCCGGATTTATTGGGCG… Bacter… Bacil… Baci… Lact… Carno… Dolo… #> 6 TACGTAGGTCCCGAGCGTTGTCCGGATTTATTGGGCG… Bacter… Bacil… Baci… Lact… Strep… Stre…"},{"path":"https://mshilts1.github.io/micro4R/index.html","id":"sample-metadata","dir":"","previous_headings":"Example","what":"Sample metadata","title":"Microbiome Analysis Tools for R","text":"Next, need load metadata samples. Let’s look ‘SampleID’ field, sound like, uniquely identifies sample: first thing may notice ‘SampleIDs’ kinds IDs computer love. standard workflow, like keep SampleIDs FASTQ file names default automatically match SampleIDs generated dada2_asvtable(). example, also ‘LabID’ field, ID used specimen processing, much human-friendly: seemlessly use package, MUST column called ‘SampleID’, IDs must exactly match metadata ASV count table objects. otherwise, ’re free name samples whatever want.","code":"metadata <- example_metadata()  metadata #> # A tibble: 7 × 7 #>   SampleID                 LabID SampleType host_age host_sex Host_disease neg   #>   <chr>                    <chr> <chr>         <int> <chr>    <chr>        <lgl> #> 1 SAMPLED_5080-MS-1_328-G… part… Homo sapi…       33 female   healthy      FALSE #> 2 SAMPLED_5080-MS-1_339-A… part… Homo sapi…       25 male     healthy      FALSE #> 3 SAMPLED_5348-MS-1_162-A… part… Homo sapi…       27 male     COVID-19     FALSE #> 4 SAMPLED_5348-MS-1_297-G… part… Homo sapi…       26 female   COVID-19     FALSE #> 5 SAMPLED_5080-MS-1_307-A… CTRL… negative …       NA <NA>     <NA>         TRUE  #> 6 SAMPLED_5080-MS-1_313-G… CTRL… negative …       NA <NA>     <NA>         TRUE  #> 7 SAMPLED_5348-MS-1_381-T… CTRL… positive …       NA <NA>     <NA>         FALSE metadata$SampleID #> [1] \"SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001\" #> [2] \"SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001\" #> [3] \"SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001\" #> [4] \"SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001\" #> [5] \"SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001\" #> [6] \"SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001\" #> [7] \"SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001\" metadata$LabID #> [1] \"participant01\" \"participant02\" \"participant03\" \"participant04\" #> [5] \"CTRL_neg_ext\"  \"CTRL_neg_pcr\"  \"CTRL_pos_pcr\""},{"path":"https://mshilts1.github.io/micro4R/index.html","id":"bioinformatic-decontamination","dir":"","previous_headings":"Example","what":"Bioinformatic decontamination","title":"Microbiome Analysis Tools for R","text":"kind information ’ll need metadata object HIGHLY dependent study, ’s information must optional (highly recommended!) processing ASV table decontam. decontam need know? 1. use “prevalence” method: samples negative controls. 2. use “frequency” method: DNA concentration sample prior sequencing. 3. use /either “prevalence” “frequency” methods, need . Don’t negative controls? won’t able run decontam, strongly recommend include next time! negative positive controls important! Read : 1,2,3,4,5 example data, able use “prevalence” method, know samples negative controls, . information column called “neg”, TRUE means negative control: Next, let’s run decontam_wrapper() example data ’ve generated far: ’ll see several messages, including one bottom tells us “contaminants detected. Exiting function.” real data, expect ever see message. example data set just stupidly small decontam work properly. can demonstrate decontam actually something, ’ll deliberately “contaminate” ASV table contaminate() command. ’re artificially adding counts one ASVs, throwing negative controls good measure. data even fake made previously! command contaminate() also simultaneously create matched metadata object additional made negative controls. object “decontaminated” contains list … decontaminated… ASV table, taxa table, convenience also includes metadata table. decontaminated version ASV taxa tables one fewer ASV originals, artifically added bunch counts one ASVs contaminated version ASV table. decontam rightfully thinks ASV likely background contaminant due prevalence negative controls, now removed , make data cleaner reliable. important?1 Move information bottom anyone wants details subsampled FASTQ files manuscript co-authored colleagues, raw data publicly available bioproject ID PRJNA726992. seven samples study, using seqtk, randomly sampled 50 reads FASTQ file files take minimal space example run quickly. ’d like run full fastq files can downloaded SRA zipped bolus body text needs footnote.2 logo made using artwork Canva (©iconbunny11) followed hexSticker get typical hex logo format. going keep readme, want hold onto logo code put somewhere else. s <- sticker(image_path, package=“micro4R”, p_size=15, p_family = “Comfortaa”, p_fontface = “bold”, p_y = 1.5, s_x=1, s_y=.75, s_width=.5, s_height = .5, p_color = “black”, h_fill = “#6ed5f5”, h_color= “#16bc93”, h_size = 2, filename=“inst/figures/imgfile.png”). built R 4.5.1 RStudio Version 2025.05.1+513 (2025.05.1+513) macOS Sequoia Version 15.6.1","code":"metadata$neg #> [1] FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE decontam_wrapper(asvtable = asvtable, taxa = taxa, metadata = metadata, logfile = FALSE) #> Warning in .is_contaminant(seqtab, conc = conc, neg = neg, method = method, : #> Removed 3 samples with zero total counts (or frequency). #> Warning in .is_contaminant(seqtab, conc = conc, neg = neg, method = method, : #> Some batches have very few (<=4) samples. #> Warning in .is_contaminant(seqtab, conc = conc, neg = neg, method = method, : #> Removed 3 samples with zero total counts (or frequency). #> Warning in .is_contaminant(seqtab, conc = conc, neg = neg, method = method, : #> Some batches have very few (<=4) samples. #> [1] \"No contaminants were detected. Exiting function.\" contaminated_asvtable <- converter(contaminate()$asvtable) contaminated_taxa <- dada2_taxa(asvtable = contaminated_asvtable, train = train, species = species) # we don't actually have to re-run this command with this specific example, but it's good practice to always ensure your asvtable and taxa tables match. #> [1] \"CAUTION: You're using the provided micro4R EXAMPLE reference databases. These are extremely tiny and unrealistic and meant only for testing and demonstration purposes. DO NOT use them with your real data.\" #> Finished processing reference fasta. contaminated_metadata <- contaminate()$metadata decontaminated <- decontam_wrapper(asvtable = contaminated_asvtable, taxa = contaminated_taxa, metadata = contaminated_metadata, logfile = FALSE) #> Warning in .is_contaminant(seqtab, conc = conc, neg = neg, method = method, : #> Removed 1 samples with zero total counts (or frequency). #> Warning in .is_contaminant(seqtab, conc = conc, neg = neg, method = method, : #> Removed 1 samples with zero total counts (or frequency). dim(contaminated_taxa) #> [1] 6 6 dim(decontaminated$taxa) #> [1] 5 6  dim(contaminated_asvtable) #> [1] 15  6 dim(decontaminated$asvtable) #> [1] 15  5"},{"path":"https://mshilts1.github.io/micro4R/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Microbiome Analysis Tools for R","text":"mentioned , done without benefit work others. tools especially important: mothur qiime mgsat maaslin2/3 vegan tidyverse, especially dplyr ggplot2. addition packages, Hadley Wickham team written several extremely helpful guides tutorials data science. dada2 decontam Suite Dr. Frank Harrell, especially rms Hmisc. Colleague physician-scientist Dr. Christian Rosas-Salazar talented many things, especial knack creating figures beautiful informative. acknowledgements details added later","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/checkASV.html","id":null,"dir":"Reference","previous_headings":"","what":"checker utils in this section Check your ASV count and taxonomy tables for potential issues. — checkASV","title":"checker utils in this section Check your ASV count and taxonomy tables for potential issues. — checkASV","text":"checker utils section Check ASV count taxonomy tables potential issues.","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/checkASV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"checker utils in this section Check your ASV count and taxonomy tables for potential issues. — checkASV","text":"","code":"checkASV(asvtable = NULL, taxa = NULL, metadata = NULL)"},{"path":"https://mshilts1.github.io/micro4R/reference/checkASV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"checker utils in this section Check your ASV count and taxonomy tables for potential issues. — checkASV","text":"asvtable ASV table taxa associated taxonomy table metadata associated metadata table","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/checkASV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"checker utils in this section Check your ASV count and taxonomy tables for potential issues. — checkASV","text":"Notifies user issues asvtable, taxonomy table, metadata cause downstream problems.","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/checkMeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Check metadata file to identify potential downstream issues. — checkMeta","title":"Check metadata file to identify potential downstream issues. — checkMeta","text":"Check metadata file identify potential downstream issues.","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/checkMeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check metadata file to identify potential downstream issues. — checkMeta","text":"","code":"checkMeta(df, ids = \"SampleID\")"},{"path":"https://mshilts1.github.io/micro4R/reference/checkMeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check metadata file to identify potential downstream issues. — checkMeta","text":"df data frame tibble containing sample metadata. ids column name data frame identifies sample IDs.","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/checkMeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check metadata file to identify potential downstream issues. — checkMeta","text":"Returns warnings errors metadata object may cause downstream problems.","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/checkMeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check metadata file to identify potential downstream issues. — checkMeta","text":"","code":"metadata <- data.frame(   SampleIDs = c(\"Sample1\", \"Sample2\", \"Sample3\"),   Age       = c(34, 58, 21),   Health    = c(\"Healthy\", \"Sick\", NA) ) checkMeta(metadata, \"SampleIDs\") #> Warning: As least 1 NA or empty cell was detected in 1 sample(s) in your metadata object. This is not necessarily bad or wrong, but if you were not expecting this, check your metadata object again. Sample(s) Sample3 were detected to have NAs or empty cells."},{"path":"https://mshilts1.github.io/micro4R/reference/contaminate.html","id":null,"dir":"Reference","previous_headings":"","what":"","title":"","text":"\"Contaminate\" example ASV table decontam can run example","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/contaminate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"","text":"","code":"contaminate()"},{"path":"https://mshilts1.github.io/micro4R/reference/contaminate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"","text":"artificially \"contaminated\" ASV table","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/contaminate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"","text":"","code":"contaminated_asvtable <- contaminate()"},{"path":"https://mshilts1.github.io/micro4R/reference/converter.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts tibbles, data frames, and matrices to each other as needed by the specific function — converter","title":"Converts tibbles, data frames, and matrices to each other as needed by the specific function — converter","text":"Converts tibbles, data frames, matrices needed specific function","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/converter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts tibbles, data frames, and matrices to each other as needed by the specific function — converter","text":"","code":"converter(x = NULL, out = \"matrix\", id = \"SampleID\")"},{"path":"https://mshilts1.github.io/micro4R/reference/converter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts tibbles, data frames, and matrices to each other as needed by the specific function — converter","text":"x tibble, data frame, matrix want convert want conver (tibble, data_frame, matrix) id ID column, relevant","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/converter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts tibbles, data frames, and matrices to each other as needed by the specific function — converter","text":"tibble, data frame, matrix","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/converter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts tibbles, data frames, and matrices to each other as needed by the specific function — converter","text":"","code":"converter(contaminate()$asvtable)"},{"path":"https://mshilts1.github.io/micro4R/reference/dada2_asvtable.html","id":null,"dir":"Reference","previous_headings":"","what":"dada2 workflow to generate ASV table — dada2_asvtable","title":"dada2 workflow to generate ASV table — dada2_asvtable","text":"dada2 workflow generate ASV table","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/dada2_asvtable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dada2 workflow to generate ASV table — dada2_asvtable","text":"","code":"dada2_asvtable(   where = NULL,   example = FALSE,   patternF = \"_R1_001.fastq.gz\",   patternR = \"_R2_001.fastq.gz\",   multi = FALSE,   chatty = TRUE,   logfile = TRUE,   ... )"},{"path":"https://mshilts1.github.io/micro4R/reference/dada2_asvtable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dada2 workflow to generate ASV table — dada2_asvtable","text":"Path fastq files. example Set TRUE run example patternF Pattern forward/R1 reads. Default Illumina standard. patternR Pattern reverse/R2 reads. Default Illumina standard multi multithreading done? Can use set TRUE FALSE entire wrapper. chatty chatty code ? Default TRUE, set FALSE want much text going console. logfile Write logfile user's computer. Default TRUE ... Allows passing arguments nested functions","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/dada2_asvtable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dada2 workflow to generate ASV table — dada2_asvtable","text":"dada2 ASV table","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/dada2_asvtable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dada2 workflow to generate ASV table — dada2_asvtable","text":"","code":"dada2_asvtable(example = TRUE, logfile = FALSE) #> [1] \"Because you're running the example, any output files will go to a temporary directory, /tmp/Rtmp2FlT2a/dada2_out. To avoid cluttering your computer, this folder and its contents should all be deleted at the end of your R session.\" #> [1] \"Because you're running the example, any output files will go to a temporary directory, /tmp/Rtmp2FlT2a/dada2_out. To avoid cluttering your computer, this folder and its contents should all be deleted at the end of your R session.\" #> Creating output directory: /tmp/Rtmp2FlT2a/dada2_out/filtered #> Read in 50 paired-sequences, output 11 (22%) filtered paired-sequences. #> Read in 50 paired-sequences, output 26 (52%) filtered paired-sequences. #> Read in 50 paired-sequences, output 46 (92%) filtered paired-sequences. #> Read in 50 paired-sequences, output 41 (82%) filtered paired-sequences. #> Read in 50 paired-sequences, output 37 (74%) filtered paired-sequences. #> Read in 50 paired-sequences, output 44 (88%) filtered paired-sequences. #> Read in 50 paired-sequences, output 43 (86%) filtered paired-sequences. #> 59520 total bases in 248 reads from 7 samples will be used for learning the error rates. #> Initializing error rates to maximum possible estimate. #> selfConsist step 1 ....... #>    selfConsist step 2 #> Convergence after  2  rounds. #> 49600 total bases in 248 reads from 7 samples will be used for learning the error rates. #> Initializing error rates to maximum possible estimate. #> selfConsist step 1 ....... #>    selfConsist step 2 #> Convergence after  2  rounds. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001_F_filt.fastq.gz #> Encountered 11 unique sequences from 11 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001_F_filt.fastq.gz #> Encountered 25 unique sequences from 26 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001_F_filt.fastq.gz #> Encountered 37 unique sequences from 46 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001_F_filt.fastq.gz #> Encountered 36 unique sequences from 41 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001_F_filt.fastq.gz #> Encountered 30 unique sequences from 37 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001_F_filt.fastq.gz #> Encountered 33 unique sequences from 44 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001_F_filt.fastq.gz #> Encountered 36 unique sequences from 43 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001_R_filt.fastq.gz #> Encountered 11 unique sequences from 11 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001_R_filt.fastq.gz #> Encountered 23 unique sequences from 26 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001_R_filt.fastq.gz #> Encountered 35 unique sequences from 46 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001_R_filt.fastq.gz #> Encountered 35 unique sequences from 41 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001_R_filt.fastq.gz #> Encountered 31 unique sequences from 37 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001_R_filt.fastq.gz #> Encountered 32 unique sequences from 44 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001_R_filt.fastq.gz #> Encountered 37 unique sequences from 43 total sequences read. #> Sample 1 - 11 reads in 11 unique sequences. #> Sample 2 - 26 reads in 25 unique sequences. #> Sample 3 - 46 reads in 37 unique sequences. #> Sample 4 - 41 reads in 36 unique sequences. #> Sample 5 - 37 reads in 30 unique sequences. #> Sample 6 - 44 reads in 33 unique sequences. #> Sample 7 - 43 reads in 36 unique sequences. #> Sample 1 - 11 reads in 11 unique sequences. #> Sample 2 - 26 reads in 23 unique sequences. #> Sample 3 - 46 reads in 35 unique sequences. #> Sample 4 - 41 reads in 35 unique sequences. #> Sample 5 - 37 reads in 31 unique sequences. #> Sample 6 - 44 reads in 32 unique sequences. #> Sample 7 - 43 reads in 37 unique sequences. #> 0 paired-reads (in 0 unique pairings) successfully merged out of 1 (in 1 pairings) input. #> 0 paired-reads (in 0 unique pairings) successfully merged out of 10 (in 1 pairings) input. #> 44 paired-reads (in 1 unique pairings) successfully merged out of 44 (in 1 pairings) input. #> 37 paired-reads (in 2 unique pairings) successfully merged out of 37 (in 2 pairings) input. #> 28 paired-reads (in 3 unique pairings) successfully merged out of 28 (in 3 pairings) input. #> 41 paired-reads (in 2 unique pairings) successfully merged out of 41 (in 2 pairings) input. #> 0 paired-reads (in 0 unique pairings) successfully merged out of 31 (in 3 pairings) input. #> Identified 0 bimeras out of 6 input sequences. #>                                                   TACGTAGGTGGCAAGCGTTATCCGGAATTATTGGGCGTAAAGCGCGCGTAGGCGGTTTTTTAAGTCTGATGTGAAAGCCCACGGCTCAACCGTGGAGGGTCATTGGAAACTGGAAAACTTGAGTGCAGAAGAGGAAAGTGGAATTCCATGTGTAGCGGTGAAATGCGCAGAGATATGGAGGAACACCAGTGGCGAAGGCGACTTTCTGGTCTGTAACTGACGCTGATGTGCGAAAGCGTGGGGATCAAACAGG #> SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001                                                                                                                                                                                                                                                             0 #> SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001                                                                                                                                                                                                                                                             0 #> SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001                                                                                                                                                                                                                                                            44 #> SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001                                                                                                                                                                                                                                                            24 #> SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001                                                                                                                                                                                                                                                             0 #> SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001                                                                                                                                                                                                                                                             0 #> SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001                                                                                                                                                                                                                                                             0 #>                                                   TACGGAGGGTGCAAGCGTTAATCGGAATTACTGGGCGTAAAGCGCACGCAGGCGGTCTGTCAAGTCGGATGTGAAATCCCCGGGCTCAACCTGGGAACTGCATTCGAAACTGGCAGGCTAGAGTCTTGTAGAGGGGGGTAGAATTCCAGGTGTAGCGGTGAAATGCGTAGAGATCTGGAGGAATACCGGTGGCGAAGGCGGCCCCCTGGACAAAGACTGACGCTCAGGTGCGAAAGCGTGGGGAGCAAACAGG #> SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001                                                                                                                                                                                                                                                             0 #> SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001                                                                                                                                                                                                                                                             0 #> SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001                                                                                                                                                                                                                                                             0 #> SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001                                                                                                                                                                                                                                                             0 #> SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001                                                                                                                                                                                                                                                             0 #> SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001                                                                                                                                                                                                                                                            35 #> SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001                                                                                                                                                                                                                                                             0 #>                                                   TACGTAGGGTGCGAGCGTTGTCCGGAATTACTGGGCGTAAAGGGCTCGTAGGTGGTTTGTCGCGTCGTCTGTGAAATTCTGGGGCTTAACTCCGGGCGTGCAGGCGATACGGGCATAACTTGAGTGCTGTAGGGGTAACTGGAATTCCTGGTGTAGCGGTGAAATGCGCAGATATCAGGAGGAACACCGATGGCGAAGGCAGGTTACTGGGCAGTTACTGACGCTGAGGAGCGAAAGCATGGGTAGCGAACAGG #> SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001                                                                                                                                                                                                                                                              0 #> SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001                                                                                                                                                                                                                                                              0 #> SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001                                                                                                                                                                                                                                                              0 #> SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001                                                                                                                                                                                                                                                              0 #> SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001                                                                                                                                                                                                                                                             12 #> SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001                                                                                                                                                                                                                                                              6 #> SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001                                                                                                                                                                                                                                                              0 #>                                                   TACGTAGGGTGCAAGCGTTGTCCGGAATTACTGGGCGTAAAGAGCTCGTAGGTGGTTTGTCACGTCGTCTGTGAAATTCCACAGCTTAACTGTGGGCGTGCAGGCGATACGGGCTGACTTGAGTACTGTAGGGGTAACTGGAATTCCTGGTGTAGCGGTGAAATGCGCAGATATCAGGAGGAACACCGATGGCGAAGGCAGGTTACTGGGCAGTTACTGACGCTGAGGAGCGAAAGCATGGGTAGCAAACAGG #> SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001                                                                                                                                                                                                                                                             0 #> SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001                                                                                                                                                                                                                                                             0 #> SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001                                                                                                                                                                                                                                                             0 #> SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001                                                                                                                                                                                                                                                            13 #> SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001                                                                                                                                                                                                                                                             0 #> SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001                                                                                                                                                                                                                                                             0 #> SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001                                                                                                                                                                                                                                                             0 #>                                                   TACGTAGGTGACAAGCGTTGTCCGGATTTATTGGGCGTAAAGGGAGCGCAGGCGGTCTGTTTAGTCTAATGTGAAAGCCCACGGCTTAACCGTGGAACGGCATTGGAAACTGACAGACTTGAATGTAGAAGAGGAAAATGGAATTCCAAGTGTAGCGGTGGAATGCGTAGATATTTGGAGGAACACCAGTGGCGAAGGCGATTTTCTGGTCTAACATTGACGCTGAGGCTCGAAAGCGTGGGGAGCGAACAGG #> SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001                                                                                                                                                                                                                                                             0 #> SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001                                                                                                                                                                                                                                                             0 #> SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001                                                                                                                                                                                                                                                             0 #> SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001                                                                                                                                                                                                                                                             0 #> SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001                                                                                                                                                                                                                                                            13 #> SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001                                                                                                                                                                                                                                                             0 #> SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001                                                                                                                                                                                                                                                             0 #>                                                   TACGTAGGTCCCGAGCGTTGTCCGGATTTATTGGGCGTAAAGCGAGCGCAGGCGGTTAGATAAGTCTGAAGTTAAAGGCTGTGGCTTAACCATAGTACGCTTTGGAAACTGTTTAACTTGAGTGCAAGAGGGGAGAGTGGAATTCCATGTGTAGCGGTGAAATGCGTAGATATATGGAGGAACACCGGTGGCGAAAGCGGCTCTCTGGCTTGTAACTGACGCTGAGGCTCGAAAGCGTGGGGAGCAAACAGG #> SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001                                                                                                                                                                                                                                                            0 #> SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001                                                                                                                                                                                                                                                            0 #> SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001                                                                                                                                                                                                                                                            0 #> SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001                                                                                                                                                                                                                                                            0 #> SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001                                                                                                                                                                                                                                                            3 #> SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001                                                                                                                                                                                                                                                            0 #> SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001                                                                                                                                                                                                                                                            0"},{"path":"https://mshilts1.github.io/micro4R/reference/dada2_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"dada2 taxa — dada2_taxa","title":"dada2 taxa — dada2_taxa","text":"dada2 taxa","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/dada2_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dada2 taxa — dada2_taxa","text":"","code":"dada2_taxa(   asvtable = NULL,   train = NULL,   species = NULL,   chatty = TRUE,   multi = FALSE,   example = FALSE,   ... )"},{"path":"https://mshilts1.github.io/micro4R/reference/dada2_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dada2 taxa — dada2_taxa","text":"asvtable file containing sequences; commonly ASV table output dada2. train Path database like use taxonomic assignment. species OPTIONAL: path database like use assignSpecies() function chatty Set FALSE less text print screen multi Set TRUE use mutithreading possible example Run example data. Default FALSE ... Allows passing arguments nested functions","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/dada2_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dada2 taxa — dada2_taxa","text":"table taxonomic assigments","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/dada2_taxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dada2 taxa — dada2_taxa","text":"","code":"asvtable <- dada2_asvtable(example = TRUE) #> [1] \"Because you're running the example, any output files will go to a temporary directory, /tmp/Rtmp2FlT2a/dada2_out. To avoid cluttering your computer, this folder and its contents should all be deleted at the end of your R session.\" #> [1] \"Because you're running the example, any output files will go to a temporary directory, /tmp/Rtmp2FlT2a/dada2_out. To avoid cluttering your computer, this folder and its contents should all be deleted at the end of your R session.\" #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 11 (22%) filtered paired-sequences. #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 26 (52%) filtered paired-sequences. #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 46 (92%) filtered paired-sequences. #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 41 (82%) filtered paired-sequences. #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 37 (74%) filtered paired-sequences. #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 44 (88%) filtered paired-sequences. #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 43 (86%) filtered paired-sequences. #> 59520 total bases in 248 reads from 7 samples will be used for learning the error rates. #> Initializing error rates to maximum possible estimate. #> selfConsist step 1 ....... #>    selfConsist step 2 #> Convergence after  2  rounds. #> 49600 total bases in 248 reads from 7 samples will be used for learning the error rates. #> Initializing error rates to maximum possible estimate. #> selfConsist step 1 ....... #>    selfConsist step 2 #> Convergence after  2  rounds. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001_F_filt.fastq.gz #> Encountered 11 unique sequences from 11 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001_F_filt.fastq.gz #> Encountered 25 unique sequences from 26 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001_F_filt.fastq.gz #> Encountered 37 unique sequences from 46 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001_F_filt.fastq.gz #> Encountered 36 unique sequences from 41 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001_F_filt.fastq.gz #> Encountered 30 unique sequences from 37 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001_F_filt.fastq.gz #> Encountered 33 unique sequences from 44 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001_F_filt.fastq.gz #> Encountered 36 unique sequences from 43 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001_R_filt.fastq.gz #> Encountered 11 unique sequences from 11 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001_R_filt.fastq.gz #> Encountered 23 unique sequences from 26 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001_R_filt.fastq.gz #> Encountered 35 unique sequences from 46 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001_R_filt.fastq.gz #> Encountered 35 unique sequences from 41 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001_R_filt.fastq.gz #> Encountered 31 unique sequences from 37 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001_R_filt.fastq.gz #> Encountered 32 unique sequences from 44 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001_R_filt.fastq.gz #> Encountered 37 unique sequences from 43 total sequences read. #> Sample 1 - 11 reads in 11 unique sequences. #> Sample 2 - 26 reads in 25 unique sequences. #> Sample 3 - 46 reads in 37 unique sequences. #> Sample 4 - 41 reads in 36 unique sequences. #> Sample 5 - 37 reads in 30 unique sequences. #> Sample 6 - 44 reads in 33 unique sequences. #> Sample 7 - 43 reads in 36 unique sequences. #> Sample 1 - 11 reads in 11 unique sequences. #> Sample 2 - 26 reads in 23 unique sequences. #> Sample 3 - 46 reads in 35 unique sequences. #> Sample 4 - 41 reads in 35 unique sequences. #> Sample 5 - 37 reads in 31 unique sequences. #> Sample 6 - 44 reads in 32 unique sequences. #> Sample 7 - 43 reads in 37 unique sequences. #> 0 paired-reads (in 0 unique pairings) successfully merged out of 1 (in 1 pairings) input. #> 0 paired-reads (in 0 unique pairings) successfully merged out of 10 (in 1 pairings) input. #> 44 paired-reads (in 1 unique pairings) successfully merged out of 44 (in 1 pairings) input. #> 37 paired-reads (in 2 unique pairings) successfully merged out of 37 (in 2 pairings) input. #> 28 paired-reads (in 3 unique pairings) successfully merged out of 28 (in 3 pairings) input. #> 41 paired-reads (in 2 unique pairings) successfully merged out of 41 (in 2 pairings) input. #> 0 paired-reads (in 0 unique pairings) successfully merged out of 31 (in 3 pairings) input. #> Identified 0 bimeras out of 6 input sequences. train <- \"inst/extdata/db/EXAMPLE_silva_nr99_v138.2_toGenus_trainset.fa.gz\" species <- \"inst/extdata/db/EXAMPLE_silva_v138.2_assignSpecies.fa.gz\" dada2_taxa(asvtable = asvtable, train = train, species = species) #> [1] \"CAUTION: You're using the provided micro4R EXAMPLE reference databases. These are extremely tiny and unrealistic and meant only for testing and demonstration purposes. DO NOT use them with your real data.\" #> Finished processing reference fasta. #>                                                                                                                                                                                                                                                                Kingdom    #> TACGTAGGTGGCAAGCGTTATCCGGAATTATTGGGCGTAAAGCGCGCGTAGGCGGTTTTTTAAGTCTGATGTGAAAGCCCACGGCTCAACCGTGGAGGGTCATTGGAAACTGGAAAACTTGAGTGCAGAAGAGGAAAGTGGAATTCCATGTGTAGCGGTGAAATGCGCAGAGATATGGAGGAACACCAGTGGCGAAGGCGACTTTCTGGTCTGTAACTGACGCTGATGTGCGAAAGCGTGGGGATCAAACAGG  \"Bacteria\" #> TACGGAGGGTGCAAGCGTTAATCGGAATTACTGGGCGTAAAGCGCACGCAGGCGGTCTGTCAAGTCGGATGTGAAATCCCCGGGCTCAACCTGGGAACTGCATTCGAAACTGGCAGGCTAGAGTCTTGTAGAGGGGGGTAGAATTCCAGGTGTAGCGGTGAAATGCGTAGAGATCTGGAGGAATACCGGTGGCGAAGGCGGCCCCCTGGACAAAGACTGACGCTCAGGTGCGAAAGCGTGGGGAGCAAACAGG  \"Bacteria\" #> TACGTAGGGTGCGAGCGTTGTCCGGAATTACTGGGCGTAAAGGGCTCGTAGGTGGTTTGTCGCGTCGTCTGTGAAATTCTGGGGCTTAACTCCGGGCGTGCAGGCGATACGGGCATAACTTGAGTGCTGTAGGGGTAACTGGAATTCCTGGTGTAGCGGTGAAATGCGCAGATATCAGGAGGAACACCGATGGCGAAGGCAGGTTACTGGGCAGTTACTGACGCTGAGGAGCGAAAGCATGGGTAGCGAACAGG \"Bacteria\" #> TACGTAGGGTGCAAGCGTTGTCCGGAATTACTGGGCGTAAAGAGCTCGTAGGTGGTTTGTCACGTCGTCTGTGAAATTCCACAGCTTAACTGTGGGCGTGCAGGCGATACGGGCTGACTTGAGTACTGTAGGGGTAACTGGAATTCCTGGTGTAGCGGTGAAATGCGCAGATATCAGGAGGAACACCGATGGCGAAGGCAGGTTACTGGGCAGTTACTGACGCTGAGGAGCGAAAGCATGGGTAGCAAACAGG  \"Bacteria\" #> TACGTAGGTGACAAGCGTTGTCCGGATTTATTGGGCGTAAAGGGAGCGCAGGCGGTCTGTTTAGTCTAATGTGAAAGCCCACGGCTTAACCGTGGAACGGCATTGGAAACTGACAGACTTGAATGTAGAAGAGGAAAATGGAATTCCAAGTGTAGCGGTGGAATGCGTAGATATTTGGAGGAACACCAGTGGCGAAGGCGATTTTCTGGTCTAACATTGACGCTGAGGCTCGAAAGCGTGGGGAGCGAACAGG  \"Bacteria\" #> TACGTAGGTCCCGAGCGTTGTCCGGATTTATTGGGCGTAAAGCGAGCGCAGGCGGTTAGATAAGTCTGAAGTTAAAGGCTGTGGCTTAACCATAGTACGCTTTGGAAACTGTTTAACTTGAGTGCAAGAGGGGAGAGTGGAATTCCATGTGTAGCGGTGAAATGCGTAGATATATGGAGGAACACCGGTGGCGAAAGCGGCTCTCTGGCTTGTAACTGACGCTGAGGCTCGAAAGCGTGGGGAGCAAACAGG   \"Bacteria\" #>                                                                                                                                                                                                                                                                Phylum           #> TACGTAGGTGGCAAGCGTTATCCGGAATTATTGGGCGTAAAGCGCGCGTAGGCGGTTTTTTAAGTCTGATGTGAAAGCCCACGGCTCAACCGTGGAGGGTCATTGGAAACTGGAAAACTTGAGTGCAGAAGAGGAAAGTGGAATTCCATGTGTAGCGGTGAAATGCGCAGAGATATGGAGGAACACCAGTGGCGAAGGCGACTTTCTGGTCTGTAACTGACGCTGATGTGCGAAAGCGTGGGGATCAAACAGG  \"Bacillota\"      #> TACGGAGGGTGCAAGCGTTAATCGGAATTACTGGGCGTAAAGCGCACGCAGGCGGTCTGTCAAGTCGGATGTGAAATCCCCGGGCTCAACCTGGGAACTGCATTCGAAACTGGCAGGCTAGAGTCTTGTAGAGGGGGGTAGAATTCCAGGTGTAGCGGTGAAATGCGTAGAGATCTGGAGGAATACCGGTGGCGAAGGCGGCCCCCTGGACAAAGACTGACGCTCAGGTGCGAAAGCGTGGGGAGCAAACAGG  \"Pseudomonadota\" #> TACGTAGGGTGCGAGCGTTGTCCGGAATTACTGGGCGTAAAGGGCTCGTAGGTGGTTTGTCGCGTCGTCTGTGAAATTCTGGGGCTTAACTCCGGGCGTGCAGGCGATACGGGCATAACTTGAGTGCTGTAGGGGTAACTGGAATTCCTGGTGTAGCGGTGAAATGCGCAGATATCAGGAGGAACACCGATGGCGAAGGCAGGTTACTGGGCAGTTACTGACGCTGAGGAGCGAAAGCATGGGTAGCGAACAGG \"Actinomycetota\" #> TACGTAGGGTGCAAGCGTTGTCCGGAATTACTGGGCGTAAAGAGCTCGTAGGTGGTTTGTCACGTCGTCTGTGAAATTCCACAGCTTAACTGTGGGCGTGCAGGCGATACGGGCTGACTTGAGTACTGTAGGGGTAACTGGAATTCCTGGTGTAGCGGTGAAATGCGCAGATATCAGGAGGAACACCGATGGCGAAGGCAGGTTACTGGGCAGTTACTGACGCTGAGGAGCGAAAGCATGGGTAGCAAACAGG  \"Actinomycetota\" #> TACGTAGGTGACAAGCGTTGTCCGGATTTATTGGGCGTAAAGGGAGCGCAGGCGGTCTGTTTAGTCTAATGTGAAAGCCCACGGCTTAACCGTGGAACGGCATTGGAAACTGACAGACTTGAATGTAGAAGAGGAAAATGGAATTCCAAGTGTAGCGGTGGAATGCGTAGATATTTGGAGGAACACCAGTGGCGAAGGCGATTTTCTGGTCTAACATTGACGCTGAGGCTCGAAAGCGTGGGGAGCGAACAGG  \"Bacillota\"      #> TACGTAGGTCCCGAGCGTTGTCCGGATTTATTGGGCGTAAAGCGAGCGCAGGCGGTTAGATAAGTCTGAAGTTAAAGGCTGTGGCTTAACCATAGTACGCTTTGGAAACTGTTTAACTTGAGTGCAAGAGGGGAGAGTGGAATTCCATGTGTAGCGGTGAAATGCGTAGATATATGGAGGAACACCGGTGGCGAAAGCGGCTCTCTGGCTTGTAACTGACGCTGAGGCTCGAAAGCGTGGGGAGCAAACAGG   \"Bacillota\"      #>                                                                                                                                                                                                                                                                Class                 #> TACGTAGGTGGCAAGCGTTATCCGGAATTATTGGGCGTAAAGCGCGCGTAGGCGGTTTTTTAAGTCTGATGTGAAAGCCCACGGCTCAACCGTGGAGGGTCATTGGAAACTGGAAAACTTGAGTGCAGAAGAGGAAAGTGGAATTCCATGTGTAGCGGTGAAATGCGCAGAGATATGGAGGAACACCAGTGGCGAAGGCGACTTTCTGGTCTGTAACTGACGCTGATGTGCGAAAGCGTGGGGATCAAACAGG  \"Bacilli\"             #> TACGGAGGGTGCAAGCGTTAATCGGAATTACTGGGCGTAAAGCGCACGCAGGCGGTCTGTCAAGTCGGATGTGAAATCCCCGGGCTCAACCTGGGAACTGCATTCGAAACTGGCAGGCTAGAGTCTTGTAGAGGGGGGTAGAATTCCAGGTGTAGCGGTGAAATGCGTAGAGATCTGGAGGAATACCGGTGGCGAAGGCGGCCCCCTGGACAAAGACTGACGCTCAGGTGCGAAAGCGTGGGGAGCAAACAGG  \"Gammaproteobacteria\" #> TACGTAGGGTGCGAGCGTTGTCCGGAATTACTGGGCGTAAAGGGCTCGTAGGTGGTTTGTCGCGTCGTCTGTGAAATTCTGGGGCTTAACTCCGGGCGTGCAGGCGATACGGGCATAACTTGAGTGCTGTAGGGGTAACTGGAATTCCTGGTGTAGCGGTGAAATGCGCAGATATCAGGAGGAACACCGATGGCGAAGGCAGGTTACTGGGCAGTTACTGACGCTGAGGAGCGAAAGCATGGGTAGCGAACAGG \"Actinobacteria\"      #> TACGTAGGGTGCAAGCGTTGTCCGGAATTACTGGGCGTAAAGAGCTCGTAGGTGGTTTGTCACGTCGTCTGTGAAATTCCACAGCTTAACTGTGGGCGTGCAGGCGATACGGGCTGACTTGAGTACTGTAGGGGTAACTGGAATTCCTGGTGTAGCGGTGAAATGCGCAGATATCAGGAGGAACACCGATGGCGAAGGCAGGTTACTGGGCAGTTACTGACGCTGAGGAGCGAAAGCATGGGTAGCAAACAGG  \"Actinobacteria\"      #> TACGTAGGTGACAAGCGTTGTCCGGATTTATTGGGCGTAAAGGGAGCGCAGGCGGTCTGTTTAGTCTAATGTGAAAGCCCACGGCTTAACCGTGGAACGGCATTGGAAACTGACAGACTTGAATGTAGAAGAGGAAAATGGAATTCCAAGTGTAGCGGTGGAATGCGTAGATATTTGGAGGAACACCAGTGGCGAAGGCGATTTTCTGGTCTAACATTGACGCTGAGGCTCGAAAGCGTGGGGAGCGAACAGG  \"Bacilli\"             #> TACGTAGGTCCCGAGCGTTGTCCGGATTTATTGGGCGTAAAGCGAGCGCAGGCGGTTAGATAAGTCTGAAGTTAAAGGCTGTGGCTTAACCATAGTACGCTTTGGAAACTGTTTAACTTGAGTGCAAGAGGGGAGAGTGGAATTCCATGTGTAGCGGTGAAATGCGTAGATATATGGAGGAACACCGGTGGCGAAAGCGGCTCTCTGGCTTGTAACTGACGCTGAGGCTCGAAAGCGTGGGGAGCAAACAGG   \"Bacilli\"             #>                                                                                                                                                                                                                                                                Order              #> TACGTAGGTGGCAAGCGTTATCCGGAATTATTGGGCGTAAAGCGCGCGTAGGCGGTTTTTTAAGTCTGATGTGAAAGCCCACGGCTCAACCGTGGAGGGTCATTGGAAACTGGAAAACTTGAGTGCAGAAGAGGAAAGTGGAATTCCATGTGTAGCGGTGAAATGCGCAGAGATATGGAGGAACACCAGTGGCGAAGGCGACTTTCTGGTCTGTAACTGACGCTGATGTGCGAAAGCGTGGGGATCAAACAGG  \"Staphylococcales\" #> TACGGAGGGTGCAAGCGTTAATCGGAATTACTGGGCGTAAAGCGCACGCAGGCGGTCTGTCAAGTCGGATGTGAAATCCCCGGGCTCAACCTGGGAACTGCATTCGAAACTGGCAGGCTAGAGTCTTGTAGAGGGGGGTAGAATTCCAGGTGTAGCGGTGAAATGCGTAGAGATCTGGAGGAATACCGGTGGCGAAGGCGGCCCCCTGGACAAAGACTGACGCTCAGGTGCGAAAGCGTGGGGAGCAAACAGG  \"Enterobacterales\" #> TACGTAGGGTGCGAGCGTTGTCCGGAATTACTGGGCGTAAAGGGCTCGTAGGTGGTTTGTCGCGTCGTCTGTGAAATTCTGGGGCTTAACTCCGGGCGTGCAGGCGATACGGGCATAACTTGAGTGCTGTAGGGGTAACTGGAATTCCTGGTGTAGCGGTGAAATGCGCAGATATCAGGAGGAACACCGATGGCGAAGGCAGGTTACTGGGCAGTTACTGACGCTGAGGAGCGAAAGCATGGGTAGCGAACAGG \"Mycobacteriales\"  #> TACGTAGGGTGCAAGCGTTGTCCGGAATTACTGGGCGTAAAGAGCTCGTAGGTGGTTTGTCACGTCGTCTGTGAAATTCCACAGCTTAACTGTGGGCGTGCAGGCGATACGGGCTGACTTGAGTACTGTAGGGGTAACTGGAATTCCTGGTGTAGCGGTGAAATGCGCAGATATCAGGAGGAACACCGATGGCGAAGGCAGGTTACTGGGCAGTTACTGACGCTGAGGAGCGAAAGCATGGGTAGCAAACAGG  \"Mycobacteriales\"  #> TACGTAGGTGACAAGCGTTGTCCGGATTTATTGGGCGTAAAGGGAGCGCAGGCGGTCTGTTTAGTCTAATGTGAAAGCCCACGGCTTAACCGTGGAACGGCATTGGAAACTGACAGACTTGAATGTAGAAGAGGAAAATGGAATTCCAAGTGTAGCGGTGGAATGCGTAGATATTTGGAGGAACACCAGTGGCGAAGGCGATTTTCTGGTCTAACATTGACGCTGAGGCTCGAAAGCGTGGGGAGCGAACAGG  \"Lactobacillales\"  #> TACGTAGGTCCCGAGCGTTGTCCGGATTTATTGGGCGTAAAGCGAGCGCAGGCGGTTAGATAAGTCTGAAGTTAAAGGCTGTGGCTTAACCATAGTACGCTTTGGAAACTGTTTAACTTGAGTGCAAGAGGGGAGAGTGGAATTCCATGTGTAGCGGTGAAATGCGTAGATATATGGAGGAACACCGGTGGCGAAAGCGGCTCTCTGGCTTGTAACTGACGCTGAGGCTCGAAAGCGTGGGGAGCAAACAGG   \"Lactobacillales\"  #>                                                                                                                                                                                                                                                                Family               #> TACGTAGGTGGCAAGCGTTATCCGGAATTATTGGGCGTAAAGCGCGCGTAGGCGGTTTTTTAAGTCTGATGTGAAAGCCCACGGCTCAACCGTGGAGGGTCATTGGAAACTGGAAAACTTGAGTGCAGAAGAGGAAAGTGGAATTCCATGTGTAGCGGTGAAATGCGCAGAGATATGGAGGAACACCAGTGGCGAAGGCGACTTTCTGGTCTGTAACTGACGCTGATGTGCGAAAGCGTGGGGATCAAACAGG  \"Staphylococcaceae\"  #> TACGGAGGGTGCAAGCGTTAATCGGAATTACTGGGCGTAAAGCGCACGCAGGCGGTCTGTCAAGTCGGATGTGAAATCCCCGGGCTCAACCTGGGAACTGCATTCGAAACTGGCAGGCTAGAGTCTTGTAGAGGGGGGTAGAATTCCAGGTGTAGCGGTGAAATGCGTAGAGATCTGGAGGAATACCGGTGGCGAAGGCGGCCCCCTGGACAAAGACTGACGCTCAGGTGCGAAAGCGTGGGGAGCAAACAGG  \"Enterobacteriaceae\" #> TACGTAGGGTGCGAGCGTTGTCCGGAATTACTGGGCGTAAAGGGCTCGTAGGTGGTTTGTCGCGTCGTCTGTGAAATTCTGGGGCTTAACTCCGGGCGTGCAGGCGATACGGGCATAACTTGAGTGCTGTAGGGGTAACTGGAATTCCTGGTGTAGCGGTGAAATGCGCAGATATCAGGAGGAACACCGATGGCGAAGGCAGGTTACTGGGCAGTTACTGACGCTGAGGAGCGAAAGCATGGGTAGCGAACAGG \"Corynebacteriaceae\" #> TACGTAGGGTGCAAGCGTTGTCCGGAATTACTGGGCGTAAAGAGCTCGTAGGTGGTTTGTCACGTCGTCTGTGAAATTCCACAGCTTAACTGTGGGCGTGCAGGCGATACGGGCTGACTTGAGTACTGTAGGGGTAACTGGAATTCCTGGTGTAGCGGTGAAATGCGCAGATATCAGGAGGAACACCGATGGCGAAGGCAGGTTACTGGGCAGTTACTGACGCTGAGGAGCGAAAGCATGGGTAGCAAACAGG  \"Corynebacteriaceae\" #> TACGTAGGTGACAAGCGTTGTCCGGATTTATTGGGCGTAAAGGGAGCGCAGGCGGTCTGTTTAGTCTAATGTGAAAGCCCACGGCTTAACCGTGGAACGGCATTGGAAACTGACAGACTTGAATGTAGAAGAGGAAAATGGAATTCCAAGTGTAGCGGTGGAATGCGTAGATATTTGGAGGAACACCAGTGGCGAAGGCGATTTTCTGGTCTAACATTGACGCTGAGGCTCGAAAGCGTGGGGAGCGAACAGG  \"Carnobacteriaceae\"  #> TACGTAGGTCCCGAGCGTTGTCCGGATTTATTGGGCGTAAAGCGAGCGCAGGCGGTTAGATAAGTCTGAAGTTAAAGGCTGTGGCTTAACCATAGTACGCTTTGGAAACTGTTTAACTTGAGTGCAAGAGGGGAGAGTGGAATTCCATGTGTAGCGGTGAAATGCGTAGATATATGGAGGAACACCGGTGGCGAAAGCGGCTCTCTGGCTTGTAACTGACGCTGAGGCTCGAAAGCGTGGGGAGCAAACAGG   \"Streptococcaceae\"   #>                                                                                                                                                                                                                                                                Genus             #> TACGTAGGTGGCAAGCGTTATCCGGAATTATTGGGCGTAAAGCGCGCGTAGGCGGTTTTTTAAGTCTGATGTGAAAGCCCACGGCTCAACCGTGGAGGGTCATTGGAAACTGGAAAACTTGAGTGCAGAAGAGGAAAGTGGAATTCCATGTGTAGCGGTGAAATGCGCAGAGATATGGAGGAACACCAGTGGCGAAGGCGACTTTCTGGTCTGTAACTGACGCTGATGTGCGAAAGCGTGGGGATCAAACAGG  \"Staphylococcus\"  #> TACGGAGGGTGCAAGCGTTAATCGGAATTACTGGGCGTAAAGCGCACGCAGGCGGTCTGTCAAGTCGGATGTGAAATCCCCGGGCTCAACCTGGGAACTGCATTCGAAACTGGCAGGCTAGAGTCTTGTAGAGGGGGGTAGAATTCCAGGTGTAGCGGTGAAATGCGTAGAGATCTGGAGGAATACCGGTGGCGAAGGCGGCCCCCTGGACAAAGACTGACGCTCAGGTGCGAAAGCGTGGGGAGCAAACAGG  \"Klebsiella\"      #> TACGTAGGGTGCGAGCGTTGTCCGGAATTACTGGGCGTAAAGGGCTCGTAGGTGGTTTGTCGCGTCGTCTGTGAAATTCTGGGGCTTAACTCCGGGCGTGCAGGCGATACGGGCATAACTTGAGTGCTGTAGGGGTAACTGGAATTCCTGGTGTAGCGGTGAAATGCGCAGATATCAGGAGGAACACCGATGGCGAAGGCAGGTTACTGGGCAGTTACTGACGCTGAGGAGCGAAAGCATGGGTAGCGAACAGG \"Corynebacterium\" #> TACGTAGGGTGCAAGCGTTGTCCGGAATTACTGGGCGTAAAGAGCTCGTAGGTGGTTTGTCACGTCGTCTGTGAAATTCCACAGCTTAACTGTGGGCGTGCAGGCGATACGGGCTGACTTGAGTACTGTAGGGGTAACTGGAATTCCTGGTGTAGCGGTGAAATGCGCAGATATCAGGAGGAACACCGATGGCGAAGGCAGGTTACTGGGCAGTTACTGACGCTGAGGAGCGAAAGCATGGGTAGCAAACAGG  \"Corynebacterium\" #> TACGTAGGTGACAAGCGTTGTCCGGATTTATTGGGCGTAAAGGGAGCGCAGGCGGTCTGTTTAGTCTAATGTGAAAGCCCACGGCTTAACCGTGGAACGGCATTGGAAACTGACAGACTTGAATGTAGAAGAGGAAAATGGAATTCCAAGTGTAGCGGTGGAATGCGTAGATATTTGGAGGAACACCAGTGGCGAAGGCGATTTTCTGGTCTAACATTGACGCTGAGGCTCGAAAGCGTGGGGAGCGAACAGG  \"Dolosigranulum\"  #> TACGTAGGTCCCGAGCGTTGTCCGGATTTATTGGGCGTAAAGCGAGCGCAGGCGGTTAGATAAGTCTGAAGTTAAAGGCTGTGGCTTAACCATAGTACGCTTTGGAAACTGTTTAACTTGAGTGCAAGAGGGGAGAGTGGAATTCCATGTGTAGCGGTGAAATGCGTAGATATATGGAGGAACACCGGTGGCGAAAGCGGCTCTCTGGCTTGTAACTGACGCTGAGGCTCGAAAGCGTGGGGAGCAAACAGG   \"Streptococcus\""},{"path":"https://mshilts1.github.io/micro4R/reference/dada2_wrapper.html","id":null,"dir":"Reference","previous_headings":"","what":"dada2 wrapper — dada2_wrapper","title":"dada2 wrapper — dada2_wrapper","text":"dada2 wrapper","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/dada2_wrapper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dada2 wrapper — dada2_wrapper","text":"","code":"dada2_wrapper(example = FALSE, metadata = NULL, ...)"},{"path":"https://mshilts1.github.io/micro4R/reference/dada2_wrapper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dada2 wrapper — dada2_wrapper","text":"example Set TRUE run example metadata OPTIONAL. Can pass associated metadata object function packages downstream steps ... Allows passing arguments nested functions","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/dada2_wrapper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dada2 wrapper — dada2_wrapper","text":"list dada2 ASV table taxonomy table (metadata, optionally)","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/dada2_wrapper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dada2 wrapper — dada2_wrapper","text":"","code":"dada2_wrapper(example = TRUE) #> [1] \"Because you're running the example, any output files will go to a temporary directory, /tmp/Rtmp2FlT2a/dada2_out. To avoid cluttering your computer, this folder and its contents should all be deleted at the end of your R session.\" #> [1] \"Because you're running the example, any output files will go to a temporary directory, /tmp/Rtmp2FlT2a/dada2_out. To avoid cluttering your computer, this folder and its contents should all be deleted at the end of your R session.\" #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 11 (22%) filtered paired-sequences. #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 26 (52%) filtered paired-sequences. #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 46 (92%) filtered paired-sequences. #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 41 (82%) filtered paired-sequences. #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 37 (74%) filtered paired-sequences. #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 44 (88%) filtered paired-sequences. #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 43 (86%) filtered paired-sequences. #> 59520 total bases in 248 reads from 7 samples will be used for learning the error rates. #> Initializing error rates to maximum possible estimate. #> selfConsist step 1 ....... #>    selfConsist step 2 #> Convergence after  2  rounds. #> 49600 total bases in 248 reads from 7 samples will be used for learning the error rates. #> Initializing error rates to maximum possible estimate. #> selfConsist step 1 ....... #>    selfConsist step 2 #> Convergence after  2  rounds. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001_F_filt.fastq.gz #> Encountered 11 unique sequences from 11 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001_F_filt.fastq.gz #> Encountered 25 unique sequences from 26 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001_F_filt.fastq.gz #> Encountered 37 unique sequences from 46 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001_F_filt.fastq.gz #> Encountered 36 unique sequences from 41 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001_F_filt.fastq.gz #> Encountered 30 unique sequences from 37 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001_F_filt.fastq.gz #> Encountered 33 unique sequences from 44 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001_F_filt.fastq.gz #> Encountered 36 unique sequences from 43 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001_R_filt.fastq.gz #> Encountered 11 unique sequences from 11 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001_R_filt.fastq.gz #> Encountered 23 unique sequences from 26 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001_R_filt.fastq.gz #> Encountered 35 unique sequences from 46 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001_R_filt.fastq.gz #> Encountered 35 unique sequences from 41 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001_R_filt.fastq.gz #> Encountered 31 unique sequences from 37 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001_R_filt.fastq.gz #> Encountered 32 unique sequences from 44 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001_R_filt.fastq.gz #> Encountered 37 unique sequences from 43 total sequences read. #> Sample 1 - 11 reads in 11 unique sequences. #> Sample 2 - 26 reads in 25 unique sequences. #> Sample 3 - 46 reads in 37 unique sequences. #> Sample 4 - 41 reads in 36 unique sequences. #> Sample 5 - 37 reads in 30 unique sequences. #> Sample 6 - 44 reads in 33 unique sequences. #> Sample 7 - 43 reads in 36 unique sequences. #> Sample 1 - 11 reads in 11 unique sequences. #> Sample 2 - 26 reads in 23 unique sequences. #> Sample 3 - 46 reads in 35 unique sequences. #> Sample 4 - 41 reads in 35 unique sequences. #> Sample 5 - 37 reads in 31 unique sequences. #> Sample 6 - 44 reads in 32 unique sequences. #> Sample 7 - 43 reads in 37 unique sequences. #> 0 paired-reads (in 0 unique pairings) successfully merged out of 1 (in 1 pairings) input. #> 0 paired-reads (in 0 unique pairings) successfully merged out of 10 (in 1 pairings) input. #> 44 paired-reads (in 1 unique pairings) successfully merged out of 44 (in 1 pairings) input. #> 37 paired-reads (in 2 unique pairings) successfully merged out of 37 (in 2 pairings) input. #> 28 paired-reads (in 3 unique pairings) successfully merged out of 28 (in 3 pairings) input. #> 41 paired-reads (in 2 unique pairings) successfully merged out of 41 (in 2 pairings) input. #> 0 paired-reads (in 0 unique pairings) successfully merged out of 31 (in 3 pairings) input. #> Identified 0 bimeras out of 6 input sequences. #> [1] \"Because you're running the example, any output files will go to a temporary directory, /tmp/Rtmp2FlT2a/dada2_out. To avoid cluttering your computer, this folder and its contents should all be deleted at the end of your R session.\" #> [1] \"Because you're running the example, any output files will go to a temporary directory, /tmp/Rtmp2FlT2a/dada2_out. To avoid cluttering your computer, this folder and its contents should all be deleted at the end of your R session.\" #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 11 (22%) filtered paired-sequences. #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 26 (52%) filtered paired-sequences. #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 46 (92%) filtered paired-sequences. #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 41 (82%) filtered paired-sequences. #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 37 (74%) filtered paired-sequences. #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 44 (88%) filtered paired-sequences. #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 43 (86%) filtered paired-sequences. #> 59520 total bases in 248 reads from 7 samples will be used for learning the error rates. #> Initializing error rates to maximum possible estimate. #> selfConsist step 1 ....... #>    selfConsist step 2 #> Convergence after  2  rounds. #> 49600 total bases in 248 reads from 7 samples will be used for learning the error rates. #> Initializing error rates to maximum possible estimate. #> selfConsist step 1 ....... #>    selfConsist step 2 #> Convergence after  2  rounds. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001_F_filt.fastq.gz #> Encountered 11 unique sequences from 11 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001_F_filt.fastq.gz #> Encountered 25 unique sequences from 26 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001_F_filt.fastq.gz #> Encountered 37 unique sequences from 46 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001_F_filt.fastq.gz #> Encountered 36 unique sequences from 41 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001_F_filt.fastq.gz #> Encountered 30 unique sequences from 37 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001_F_filt.fastq.gz #> Encountered 33 unique sequences from 44 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001_F_filt.fastq.gz #> Encountered 36 unique sequences from 43 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001_R_filt.fastq.gz #> Encountered 11 unique sequences from 11 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001_R_filt.fastq.gz #> Encountered 23 unique sequences from 26 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001_R_filt.fastq.gz #> Encountered 35 unique sequences from 46 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001_R_filt.fastq.gz #> Encountered 35 unique sequences from 41 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001_R_filt.fastq.gz #> Encountered 31 unique sequences from 37 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001_R_filt.fastq.gz #> Encountered 32 unique sequences from 44 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001_R_filt.fastq.gz #> Encountered 37 unique sequences from 43 total sequences read. #> Sample 1 - 11 reads in 11 unique sequences. #> Sample 2 - 26 reads in 25 unique sequences. #> Sample 3 - 46 reads in 37 unique sequences. #> Sample 4 - 41 reads in 36 unique sequences. #> Sample 5 - 37 reads in 30 unique sequences. #> Sample 6 - 44 reads in 33 unique sequences. #> Sample 7 - 43 reads in 36 unique sequences. #> Sample 1 - 11 reads in 11 unique sequences. #> Sample 2 - 26 reads in 23 unique sequences. #> Sample 3 - 46 reads in 35 unique sequences. #> Sample 4 - 41 reads in 35 unique sequences. #> Sample 5 - 37 reads in 31 unique sequences. #> Sample 6 - 44 reads in 32 unique sequences. #> Sample 7 - 43 reads in 37 unique sequences. #> 0 paired-reads (in 0 unique pairings) successfully merged out of 1 (in 1 pairings) input. #> 0 paired-reads (in 0 unique pairings) successfully merged out of 10 (in 1 pairings) input. #> 44 paired-reads (in 1 unique pairings) successfully merged out of 44 (in 1 pairings) input. #> 37 paired-reads (in 2 unique pairings) successfully merged out of 37 (in 2 pairings) input. #> 28 paired-reads (in 3 unique pairings) successfully merged out of 28 (in 3 pairings) input. #> 41 paired-reads (in 2 unique pairings) successfully merged out of 41 (in 2 pairings) input. #> 0 paired-reads (in 0 unique pairings) successfully merged out of 31 (in 3 pairings) input. #> Identified 0 bimeras out of 6 input sequences. #> [1] \"CAUTION: You're using the provided micro4R EXAMPLE reference databases. These are extremely tiny and unrealistic and meant only for testing and demonstration purposes. DO NOT use them with your real data.\" #> Finished processing reference fasta. #> $asvtable #> # A tibble: 7 × 7 #>   SampleID  TACGTAGGTGGCAAGCGTTA…¹ TACGGAGGGTGCAAGCGTTA…² TACGTAGGGTGCGAGCGTTG…³ #>   <chr>                      <int>                  <int>                  <int> #> 1 SAMPLED_…                      0                      0                      0 #> 2 SAMPLED_…                      0                      0                      0 #> 3 SAMPLED_…                     44                      0                      0 #> 4 SAMPLED_…                     24                      0                      0 #> 5 SAMPLED_…                      0                      0                     12 #> 6 SAMPLED_…                      0                     35                      6 #> 7 SAMPLED_…                      0                      0                      0 #> # ℹ abbreviated names: #> #   ¹​TACGTAGGTGGCAAGCGTTATCCGGAATTATTGGGCGTAAAGCGCGCGTAGGCGGTTTTTTAAGTCTGATGTGAAAGCCCACGGCTCAACCGTGGAGGGTCATTGGAAACTGGAAAACTTGAGTGCAGAAGAGGAAAGTGGAATTCCATGTGTAGCGGTGAAATGCGCAGAGATATGGAGGAACACCAGTGGCGAAGGCGACTTTCTGGTCTGTAACTGACGCTGATGTGCGAAAGCGTGGGGATCAAACAGG, #> #   ²​TACGGAGGGTGCAAGCGTTAATCGGAATTACTGGGCGTAAAGCGCACGCAGGCGGTCTGTCAAGTCGGATGTGAAATCCCCGGGCTCAACCTGGGAACTGCATTCGAAACTGGCAGGCTAGAGTCTTGTAGAGGGGGGTAGAATTCCAGGTGTAGCGGTGAAATGCGTAGAGATCTGGAGGAATACCGGTGGCGAAGGCGGCCCCCTGGACAAAGACTGACGCTCAGGTGCGAAAGCGTGGGGAGCAAACAGG, #> #   ³​TACGTAGGGTGCGAGCGTTGTCCGGAATTACTGGGCGTAAAGGGCTCGTAGGTGGTTTGTCGCGTCGTCTGTGAAATTCTGGGGCTTAACTCCGGGCGTGCAGGCGATACGGGCATAACTTGAGTGCTGTAGGGGTAACTGGAATTCCTGGTGTAGCGGTGAAATGCGCAGATATCAGGAGGAACACCGATGGCGAAGGCAGGTTACTGGGCAGTTACTGACGCTGAGGAGCGAAAGCATGGGTAGCGAACAGG #> # ℹ 3 more variables: #> #   TACGTAGGGTGCAAGCGTTGTCCGGAATTACTGGGCGTAAAGAGCTCGTAGGTGGTTTGTCACGTCGTCTGTGAAATTCCACAGCTTAACTGTGGGCGTGCAGGCGATACGGGCTGACTTGAGTACTGTAGGGGTAACTGGAATTCCTGGTGTAGCGGTGAAATGCGCAGATATCAGGAGGAACACCGATGGCGAAGGCAGGTTACTGGGCAGTTACTGACGCTGAGGAGCGAAAGCATGGGTAGCAAACAGG <int>, #> #   TACGTAGGTGACAAGCGTTGTCCGGATTTATTGGGCGTAAAGGGAGCGCAGGCGGTCTGTTTAGTCTAATGTGAAAGCCCACGGCTTAACCGTGGAACGGCATTGGAAACTGACAGACTTGAATGTAGAAGAGGAAAATGGAATTCCAAGTGTAGCGGTGGAATGCGTAGATATTTGGAGGAACACCAGTGGCGAAGGCGATTTTCTGGTCTAACATTGACGCTGAGGCTCGAAAGCGTGGGGAGCGAACAGG <int>, … #>  #> $taxa #> # A tibble: 6 × 7 #>   ASV                                    Kingdom Phylum Class Order Family Genus #>   <chr>                                  <chr>   <chr>  <chr> <chr> <chr>  <chr> #> 1 TACGTAGGTGGCAAGCGTTATCCGGAATTATTGGGCG… Bacter… Bacil… Baci… Stap… Staph… Stap… #> 2 TACGGAGGGTGCAAGCGTTAATCGGAATTACTGGGCG… Bacter… Pseud… Gamm… Ente… Enter… Kleb… #> 3 TACGTAGGGTGCGAGCGTTGTCCGGAATTACTGGGCG… Bacter… Actin… Acti… Myco… Coryn… Cory… #> 4 TACGTAGGGTGCAAGCGTTGTCCGGAATTACTGGGCG… Bacter… Actin… Acti… Myco… Coryn… Cory… #> 5 TACGTAGGTGACAAGCGTTGTCCGGATTTATTGGGCG… Bacter… Bacil… Baci… Lact… Carno… Dolo… #> 6 TACGTAGGTCCCGAGCGTTGTCCGGATTTATTGGGCG… Bacter… Bacil… Baci… Lact… Strep… Stre… #>  #> $metadata #> # A tibble: 7 × 7 #>   SampleID                 LabID SampleType host_age host_sex Host_disease neg   #>   <chr>                    <chr> <chr>         <int> <chr>    <chr>        <lgl> #> 1 SAMPLED_5080-MS-1_328-G… part… Homo sapi…       33 female   healthy      FALSE #> 2 SAMPLED_5080-MS-1_339-A… part… Homo sapi…       25 male     healthy      FALSE #> 3 SAMPLED_5348-MS-1_162-A… part… Homo sapi…       27 male     COVID-19     FALSE #> 4 SAMPLED_5348-MS-1_297-G… part… Homo sapi…       26 female   COVID-19     FALSE #> 5 SAMPLED_5080-MS-1_307-A… CTRL… negative …       NA NA       NA           TRUE  #> 6 SAMPLED_5080-MS-1_313-G… CTRL… negative …       NA NA       NA           TRUE  #> 7 SAMPLED_5348-MS-1_381-T… CTRL… positive …       NA NA       NA           FALSE #>"},{"path":"https://mshilts1.github.io/micro4R/reference/decontam_wrapper.html","id":null,"dir":"Reference","previous_headings":"","what":"Decontam — decontam_wrapper","title":"Decontam — decontam_wrapper","text":"Decontam","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/decontam_wrapper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decontam — decontam_wrapper","text":"","code":"decontam_wrapper(asvtable = NULL, taxa = NULL, metadata = NULL, ...)"},{"path":"https://mshilts1.github.io/micro4R/reference/decontam_wrapper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decontam — decontam_wrapper","text":"asvtable asvtable taxa taxa metadata metadata ... allow arguments passed nested functions","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/decontam_wrapper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decontam — decontam_wrapper","text":"asvtable potential contaminants removed","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/decontam_wrapper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decontam — decontam_wrapper","text":"","code":"train <- \"inst/extdata/db/EXAMPLE_silva_nr99_v138.2_toGenus_trainset.fa.gz\" species <- \"inst/extdata/db/EXAMPLE_silva_v138.2_assignSpecies.fa.gz\"  # the example ASV table is too small for decontam to work properly # to get around this, we deliberately \"contaminate\" the ASV table with # the contaminate() command. this requires us to use the matched metadata # file created with contaminate() asvtable <- converter(contaminate()$asvtable) taxa <- dada2_taxa(asvtable = asvtable, train = train, species = species) #> [1] \"CAUTION: You're using the provided micro4R EXAMPLE reference databases. These are extremely tiny and unrealistic and meant only for testing and demonstration purposes. DO NOT use them with your real data.\" #> Finished processing reference fasta. metadata <- contaminate()$metadata decontam_wrapper(asvtable = asvtable, taxa = taxa, metadata = metadata, logfile = FALSE) #> Warning: Removed 1 samples with zero total counts (or frequency). #> Warning: Removed 1 samples with zero total counts (or frequency)."},{"path":"https://mshilts1.github.io/micro4R/reference/exampleData.html","id":null,"dir":"Reference","previous_headings":"","what":"List of all three example objects in one package — exampleData","title":"List of all three example objects in one package — exampleData","text":"Made metadata, ASV count, ASV taxonomy tables","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/exampleData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of all three example objects in one package — exampleData","text":"","code":"exampleData"},{"path":[]},{"path":"https://mshilts1.github.io/micro4R/reference/exampleData.html","id":"exampledata","dir":"Reference","previous_headings":"","what":"exampleData","title":"List of all three example objects in one package — exampleData","text":"list three tibbles: exampleMetadata Example metadata tibble exampleASVtable Example ASV count table exampleTaxa Example ASV taxonomy table","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/exampleData.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"List of all three example objects in one package — exampleData","text":"made data following typical dada2 ASV count taxonomy table style","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/example_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Load in example metadata file — example_metadata","title":"Load in example metadata file — example_metadata","text":"Load example metadata file","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/example_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load in example metadata file — example_metadata","text":"","code":"example_metadata()"},{"path":"https://mshilts1.github.io/micro4R/reference/example_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load in example metadata file — example_metadata","text":"example metadata file","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/example_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load in example metadata file — example_metadata","text":"","code":"metadata <- example_metadata()"},{"path":"https://mshilts1.github.io/micro4R/reference/full_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Option to use googledrive package to download example data — full_example_data","title":"Option to use googledrive package to download example data — full_example_data","text":"Option use googledrive package download example data","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/full_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Option to use googledrive package to download example data — full_example_data","text":"","code":"full_example_data(path = NULL)"},{"path":"https://mshilts1.github.io/micro4R/reference/full_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Option to use googledrive package to download example data — full_example_data","text":"path Path directory want download file .","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/full_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Option to use googledrive package to download example data — full_example_data","text":"Downloads zipped folder full fastq files used example work. may delete later.","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/known_dada2_dbs.html","id":null,"dir":"Reference","previous_headings":"","what":"A simple tibble of the names of maintained dada2-formatted taxonomy reference databases — known_dada2_dbs","title":"A simple tibble of the names of maintained dada2-formatted taxonomy reference databases — known_dada2_dbs","text":"simple tibble names maintained dada2-formatted taxonomy reference databases","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/known_dada2_dbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A simple tibble of the names of maintained dada2-formatted taxonomy reference databases — known_dada2_dbs","text":"","code":"known_dada2_dbs(what = \"list\")"},{"path":"https://mshilts1.github.io/micro4R/reference/known_dada2_dbs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A simple tibble of the names of maintained dada2-formatted taxonomy reference databases — known_dada2_dbs","text":"keypair listing expected pattern name vector known names.","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/known_dada2_dbs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A simple tibble of the names of maintained dada2-formatted taxonomy reference databases — known_dada2_dbs","text":"tibble","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/known_dada2_dbs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A simple tibble of the names of maintained dada2-formatted taxonomy reference databases — known_dada2_dbs","text":"","code":"known_dada2_dbs() #> # A tibble: 8 × 2 #>   database   database_file_name                         #>   <chr>      <chr>                                      #> 1 GreenGenes gg2_2024_09_toGenus_trainset.fa.gz         #> 2 GreenGenes gg2_2024_09_toSpecies_trainset.fa.gz       #> 3 RDP        rdp_19_toGenus_trainset.fa.gz              #> 4 RDP        rdp_19_toSpecies_trainset.fa.gz            #> 5 UNITE      sh_general_release_all_19.02.2025.tgz      #> 6 SILVA      silva_nr99_v138.2_toGenus_trainset.fa.gz   #> 7 SILVA      silva_nr99_v138.2_toSpecies_trainset.fa.gz #> 8 SILVA      silva_v138.2_assignSpecies.fa.gz"},{"path":"https://mshilts1.github.io/micro4R/reference/makeExample.html","id":null,"dir":"Reference","previous_headings":"","what":"Create example data for testing and teaching purposes specifically for this package. — makeExample","title":"Create example data for testing and teaching purposes specifically for this package. — makeExample","text":"Create example data testing teaching purposes specifically package.","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/makeExample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create example data for testing and teaching purposes specifically for this package. — makeExample","text":"","code":"makeExample(what = NULL)"},{"path":"https://mshilts1.github.io/micro4R/reference/makeExample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create example data for testing and teaching purposes specifically for this package. — makeExample","text":"want create? Valid options 'meta' (metadata table), 'asv' (ASV table), 'taxa' (taxonomy table) '' left blank create list three.","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/makeExample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create example data for testing and teaching purposes specifically for this package. — makeExample","text":"metadata, ASV, taxonomy table, list three.","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/makeExample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create example data for testing and teaching purposes specifically for this package. — makeExample","text":"","code":"metadata <- makeExample(\"meta\") asvtable <- makeExample(\"asv\") taxa <- makeExample(\"taxa\") all <- makeExample() # OR: all <- makeExample(\"all\")"},{"path":"https://mshilts1.github.io/micro4R/reference/makeExampleMeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a simple metadata table — makeExampleMeta","title":"Create a simple metadata table — makeExampleMeta","text":"Create simple metadata table","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/makeExampleMeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a simple metadata table — makeExampleMeta","text":"","code":"makeExampleMeta()"},{"path":"https://mshilts1.github.io/micro4R/reference/makeExampleMeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a simple metadata table — makeExampleMeta","text":"Simple metadata table testing demonstration.","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/makeExampleMeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a simple metadata table — makeExampleMeta","text":"","code":"metadata <- makeExampleMeta()"},{"path":"https://mshilts1.github.io/micro4R/reference/makeExampleSeqtab.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a simple example ASV table — makeExampleSeqtab","title":"Creates a simple example ASV table — makeExampleSeqtab","text":"Creates simple example ASV table","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/makeExampleSeqtab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a simple example ASV table — makeExampleSeqtab","text":"","code":"makeExampleSeqtab()"},{"path":"https://mshilts1.github.io/micro4R/reference/makeExampleSeqtab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a simple example ASV table — makeExampleSeqtab","text":"simple ASV table","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/makeExampleSeqtab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a simple example ASV table — makeExampleSeqtab","text":"","code":"makeExampleSeqtab() #> # A tibble: 12 × 10 #>    SampleID TACGGAGGGTGCGAGCGTTA…¹ TACGGAAGGTCCAGGCGTTA…² TACGTAGGTGGCAAGCGTTA…³ #>    <chr>                     <dbl>                  <dbl>                  <dbl> #>  1 HC1                        1856                  11652                  13681 #>  2 HC2                       25732                   4775                   2902 #>  3 HC3                        3385                   6760                   6184 #>  4 Sick1                     29939                  26217                  18965 #>  5 Sick2                     29954                  16142                   9656 #>  6 Sick3                     29724                   2771                  26380 #>  7 Sick4                         1                      2                      0 #>  8 ExtNegC…                     12                      5                     10 #>  9 ExtNegC…                     10                      3                      2 #> 10 PCRNegC…                      0                      2                      0 #> 11 PCRNegC…                      1                      1                      1 #> 12 PosCont…                  10005                 100024                  10036 #> # ℹ abbreviated names: #> #   ¹​TACGGAGGGTGCGAGCGTTAATCGGAATAACTGGGCGTAAAGGGCACGCAGGCGGTTATTTAAGTGAGGTGTGAAAGCCCTGGGCTTAACCTAGGAATTGCATTTCAGACTGGGTAACTAGAGTACTTTAGGGAGGGGTAGAATTCCACGTGTAGCGGTGAAATGCGTAGAGATGTGGAGGAATACCGAAGGCGAAGGCAGCCCCTTGGGAATGTACTGACGCTCATGTGCGAAAGCGTGGGGAGCAAACAGG, #> #   ²​TACGGAAGGTCCAGGCGTTATCCGGATTTATTGGGTTTAAAGGGAGCGTAGGCTGGAGATTAAGTGTGTTGTGAAATGTAGACGCTCAACGTCTGAATTGCAGCGCATACTGGTTTCCTTGAGTACGCACAACGTTGGCGGAATTCGTCGTGTAGCGGTGAAATGCTTAGATATGACGAAGAACTCCGATTGCGAAGGCAGCTGACGGGAGCGCAACTGACGCTTAAGCTCGAAGGTGCGGGTATCAAACAGG, #> #   ³​TACGTAGGTGGCAAGCGTTATCCGGAATTATTGGGCGTAAAGCGCGCGTAGGCGGTTTTTTAAGTCTGATGTGAAAGCCCACGGCTCAACCGTGGAGGGTCATTGGAAACTGGAAAACTTGAGTGCAGAAGAGGAAAGTGGAATTCCATGTGTAGCGGTGAAATGCGCAGAGATATGGAGGAACACCAGTGGCGAAGGCGACTTTCTGGTCTGTAACTGACGCTGATGTGCGAAAGCGTGGGGATCAAACAGG #> # ℹ 6 more variables: #> #   TACGGAGGGTGCGAGCGTTAATCGGAATAACTGGGCGTAAAGGGCACGCAGGCGGTTATTTAAGTGAGGTGTGAAAGCCCCGGGCTTAACCTGGGAATTGCATTTCAGACTGGGTAACTAGAGTACTTTAGGGAGGGGTAGAATTCCACGTGTAGCGGTGAAATGCGTAGAGATGTGGAGGAATACCGAAGGCGAAGGCAGCCCCTTGGGAATGTACTGACGCTCATGTGCGAAAGCGTGGGGAGCAAACAGG <dbl>, #> #   TACGTAGGTCCCGAGCGTTGTCCGGATTTATTGGGCGTAAAGCGAGCGCAGGCGGTTAGATAAGTCTGAAGTTAAAGGCTGTGGCTTAACCATAGTAGGCTTTGGAAACTGTTTAACTTGAGTGCAAGAGGGGAGAGTGGAATTCCATGTGTAGCGGTGAAATGCGTAGATATATGGAGGAACACCGGTGGCGAAAGCGGCTCTCTGGCTTGTAACTGACGCTGAGGCTCGAAAGCGTGGGGAGCAAACAGG <dbl>, …"},{"path":"https://mshilts1.github.io/micro4R/reference/makeExampleTaxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a simple taxonomy table — makeExampleTaxa","title":"Create a simple taxonomy table — makeExampleTaxa","text":"Create simple taxonomy table","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/makeExampleTaxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a simple taxonomy table — makeExampleTaxa","text":"","code":"makeExampleTaxa()"},{"path":"https://mshilts1.github.io/micro4R/reference/makeExampleTaxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a simple taxonomy table — makeExampleTaxa","text":"Simple taxonomy table testing demonstration purposes.","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/makeExampleTaxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a simple taxonomy table — makeExampleTaxa","text":"","code":"taxa <- makeExampleTaxa()"},{"path":"https://mshilts1.github.io/micro4R/reference/packItUp.html","id":null,"dir":"Reference","previous_headings":"","what":"Package up your three objects (metadata, asvtable, taxonomy table) into a single list for less typing — packItUp","title":"Package up your three objects (metadata, asvtable, taxonomy table) into a single list for less typing — packItUp","text":"Package three objects (metadata, asvtable, taxonomy table) single list less typing","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/packItUp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Package up your three objects (metadata, asvtable, taxonomy table) into a single list for less typing — packItUp","text":"","code":"packItUp(asvtable = NULL, taxa = NULL, metadata = NULL)"},{"path":"https://mshilts1.github.io/micro4R/reference/packItUp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Package up your three objects (metadata, asvtable, taxonomy table) into a single list for less typing — packItUp","text":"asvtable ASV count table object taxa Taxonomy table object metadata Metadata object","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/packItUp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Package up your three objects (metadata, asvtable, taxonomy table) into a single list for less typing — packItUp","text":"list containing three objects","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/packItUp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Package up your three objects (metadata, asvtable, taxonomy table) into a single list for less typing — packItUp","text":"","code":"asvtable <- dada2_asvtable(example = TRUE) #> [1] \"Because you're running the example, any output files will go to a temporary directory, /tmp/Rtmp2FlT2a/dada2_out. To avoid cluttering your computer, this folder and its contents should all be deleted at the end of your R session.\" #> [1] \"Because you're running the example, any output files will go to a temporary directory, /tmp/Rtmp2FlT2a/dada2_out. To avoid cluttering your computer, this folder and its contents should all be deleted at the end of your R session.\" #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 11 (22%) filtered paired-sequences. #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 26 (52%) filtered paired-sequences. #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 46 (92%) filtered paired-sequences. #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 41 (82%) filtered paired-sequences. #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 37 (74%) filtered paired-sequences. #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 44 (88%) filtered paired-sequences. #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001_F_filt.fastq.gz #> Overwriting file:/tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001_R_filt.fastq.gz #> Read in 50 paired-sequences, output 43 (86%) filtered paired-sequences. #> 59520 total bases in 248 reads from 7 samples will be used for learning the error rates. #> Initializing error rates to maximum possible estimate. #> selfConsist step 1 ....... #>    selfConsist step 2 #> Convergence after  2  rounds. #> 49600 total bases in 248 reads from 7 samples will be used for learning the error rates. #> Initializing error rates to maximum possible estimate. #> selfConsist step 1 ....... #>    selfConsist step 2 #> Convergence after  2  rounds. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001_F_filt.fastq.gz #> Encountered 11 unique sequences from 11 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001_F_filt.fastq.gz #> Encountered 25 unique sequences from 26 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001_F_filt.fastq.gz #> Encountered 37 unique sequences from 46 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001_F_filt.fastq.gz #> Encountered 36 unique sequences from 41 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001_F_filt.fastq.gz #> Encountered 30 unique sequences from 37 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001_F_filt.fastq.gz #> Encountered 33 unique sequences from 44 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001_F_filt.fastq.gz #> Encountered 36 unique sequences from 43 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_307-ATAGTACC-ACGTCTCG_S307_L001_R_filt.fastq.gz #> Encountered 11 unique sequences from 11 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_313-GACATAGT-TCGACGAG_S313_L001_R_filt.fastq.gz #> Encountered 23 unique sequences from 26 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_328-GATCTACG-TCGACGAG_S328_L001_R_filt.fastq.gz #> Encountered 35 unique sequences from 46 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5080-MS-1_339-ACTCACTG-GATCGTGT_S339_L001_R_filt.fastq.gz #> Encountered 35 unique sequences from 41 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_162-ACGTGCGC-GGATATCT_S162_L001_R_filt.fastq.gz #> Encountered 31 unique sequences from 37 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_297-GTCTGCTA-ACGTCTCG_S297_L001_R_filt.fastq.gz #> Encountered 32 unique sequences from 44 total sequences read. #> Dereplicating sequence entries in Fastq file: /tmp/Rtmp2FlT2a/dada2_out/filtered/SAMPLED_5348-MS-1_381-TGCTCGTA-GTCAGATA_S381_L001_R_filt.fastq.gz #> Encountered 37 unique sequences from 43 total sequences read. #> Sample 1 - 11 reads in 11 unique sequences. #> Sample 2 - 26 reads in 25 unique sequences. #> Sample 3 - 46 reads in 37 unique sequences. #> Sample 4 - 41 reads in 36 unique sequences. #> Sample 5 - 37 reads in 30 unique sequences. #> Sample 6 - 44 reads in 33 unique sequences. #> Sample 7 - 43 reads in 36 unique sequences. #> Sample 1 - 11 reads in 11 unique sequences. #> Sample 2 - 26 reads in 23 unique sequences. #> Sample 3 - 46 reads in 35 unique sequences. #> Sample 4 - 41 reads in 35 unique sequences. #> Sample 5 - 37 reads in 31 unique sequences. #> Sample 6 - 44 reads in 32 unique sequences. #> Sample 7 - 43 reads in 37 unique sequences. #> 0 paired-reads (in 0 unique pairings) successfully merged out of 1 (in 1 pairings) input. #> 0 paired-reads (in 0 unique pairings) successfully merged out of 10 (in 1 pairings) input. #> 44 paired-reads (in 1 unique pairings) successfully merged out of 44 (in 1 pairings) input. #> 37 paired-reads (in 2 unique pairings) successfully merged out of 37 (in 2 pairings) input. #> 28 paired-reads (in 3 unique pairings) successfully merged out of 28 (in 3 pairings) input. #> 41 paired-reads (in 2 unique pairings) successfully merged out of 41 (in 2 pairings) input. #> 0 paired-reads (in 0 unique pairings) successfully merged out of 31 (in 3 pairings) input. #> Identified 0 bimeras out of 6 input sequences. train <- \"inst/extdata/db/EXAMPLE_silva_nr99_v138.2_toGenus_trainset.fa.gz\" species <- \"inst/extdata/db/EXAMPLE_silva_v138.2_assignSpecies.fa.gz\" taxa <- dada2_taxa(asvtable = asvtable, train = train, species = species) #> [1] \"CAUTION: You're using the provided micro4R EXAMPLE reference databases. These are extremely tiny and unrealistic and meant only for testing and demonstration purposes. DO NOT use them with your real data.\" #> Finished processing reference fasta. metadata <- example_metadata() all <- packItUp(metadata, asvtable, taxa)"},{"path":"https://mshilts1.github.io/micro4R/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://mshilts1.github.io/micro4R/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/ref_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a reference database for taxonomy assignment — ref_db","title":"Set a reference database for taxonomy assignment — ref_db","text":"Set reference database taxonomy assignment","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/ref_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a reference database for taxonomy assignment — ref_db","text":"","code":"ref_db(db, chatty = TRUE)"},{"path":"https://mshilts1.github.io/micro4R/reference/ref_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a reference database for taxonomy assignment — ref_db","text":"db File path reference database use chatty Set FALSE less text printed console","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/ref_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a reference database for taxonomy assignment — ref_db","text":"file path database","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/test_dbs.html","id":null,"dir":"Reference","previous_headings":"","what":"Load test databases into environment without having to type so much. Because I'm lazy and got really tired of finding the exact text to copy paste — test_dbs","title":"Load test databases into environment without having to type so much. Because I'm lazy and got really tired of finding the exact text to copy paste — test_dbs","text":"Load test databases environment without type much. lazy got really tired finding exact text copy paste","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/test_dbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load test databases into environment without having to type so much. Because I'm lazy and got really tired of finding the exact text to copy paste — test_dbs","text":"","code":"test_dbs()"},{"path":"https://mshilts1.github.io/micro4R/reference/test_dbs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load test databases into environment without having to type so much. Because I'm lazy and got really tired of finding the exact text to copy paste — test_dbs","text":"list example training species databases","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/test_dbs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load test databases into environment without having to type so much. Because I'm lazy and got really tired of finding the exact text to copy paste — test_dbs","text":"","code":"db <- test_dbs() train <- db$train species <- db$species"},{"path":"https://mshilts1.github.io/micro4R/reference/tibblefy.html","id":null,"dir":"Reference","previous_headings":"","what":"tibblefy a specific type of data frame. DEPRECATED. use converter() instead — tibblefy","title":"tibblefy a specific type of data frame. DEPRECATED. use converter() instead — tibblefy","text":"tibblefy specific type data frame. DEPRECATED. use converter() instead","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/tibblefy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tibblefy a specific type of data frame. DEPRECATED. use converter() instead — tibblefy","text":"","code":"tibblefy(x, type = \"asvtable\")"},{"path":"https://mshilts1.github.io/micro4R/reference/tibblefy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tibblefy a specific type of data frame. DEPRECATED. use converter() instead — tibblefy","text":"x data frame want turn tibble type asvtable taxa","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/tibblefy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tibblefy a specific type of data frame. DEPRECATED. use converter() instead — tibblefy","text":"tibble","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/whereFastqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Collection of helper/utility functions not really intended to be directly used by end user Path to user's fastq file folder — whereFastqs","title":"Collection of helper/utility functions not really intended to be directly used by end user Path to user's fastq file folder — whereFastqs","text":"Collection helper/utility functions really intended directly used end user Path user's fastq file folder","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/whereFastqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collection of helper/utility functions not really intended to be directly used by end user Path to user's fastq file folder — whereFastqs","text":"","code":"whereFastqs(path = NULL, chatty = TRUE, return_tibble_or_path = \"path\")"},{"path":"https://mshilts1.github.io/micro4R/reference/whereFastqs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collection of helper/utility functions not really intended to be directly used by end user Path to user's fastq file folder — whereFastqs","text":"path Path folder containing fastq files chatty set FALSE, print much console. return_tibble_or_path Default 'path', instead can return tibble files found. ever used troubleshooting.","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/whereFastqs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collection of helper/utility functions not really intended to be directly used by end user Path to user's fastq file folder — whereFastqs","text":"file path folder","code":""},{"path":"https://mshilts1.github.io/micro4R/reference/whereFastqs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collection of helper/utility functions not really intended to be directly used by end user Path to user's fastq file folder — whereFastqs","text":"","code":"whereFastqs(\".\") #> # A tibble: 22 × 1 #>    value                 #>    <chr>                 #>  1 checkASV.html         #>  2 checkMeta.html        #>  3 contaminate.html      #>  4 converter.html        #>  5 dada2_asvtable.html   #>  6 dada2_taxa.html       #>  7 dada2_wrapper.html    #>  8 decontam_wrapper.html #>  9 exampleData.html      #> 10 example_metadata.html #> # ℹ 12 more rows #> [1] \"The total number of potential FASTQ files detected in the directory was 0, and the number of potential forward reads and reverse reads was 0. Please note that this is only performing simple pattern matching to look for standard Illumina-named files, and is only provided as a simple sanity check for you!\" #> [1] \".\""}]
